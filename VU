import sys
import gurobipy as gp
from gurobipy import GRB

# Fonction pour charger les données depuis un fichier d'entrée
def load_data(file_path):
    photos = []
    with open(file_path, 'r') as f:
        lines = f.readlines()
        num_photos = int(lines[0].strip())
        for i in range(1, num_photos + 1):
            line = lines[i].strip().split()
            orientation = line[0]  # 'H' ou 'V'
            tags = set(line[2:])  # Les tags sont stockés dans un ensemble
            photos.append({'id': i - 1, 'orientation': orientation, 'tags': tags})
    return photos

# Fonction principale
def main(input_file, output_file):
    # Charger les données
    photos = load_data(input_file)
    print(f"Loaded {len(photos)} photos.")

    # Exemple de séparation des photos H et V
    horizontal_photos = [p for p in photos if p['orientation'] == 'H']
    vertical_photos = [p for p in photos if p['orientation'] == 'V']

    print(f"Horizontal photos: {len(horizontal_photos)}, Vertical photos: {len(vertical_photos)}")

    # Initialisation du modèle Gurobi
    try:
        model = gp.Model("Slideshow")

        # Ajouter des variables, des contraintes, et définir l'objectif ici
        # Exemple de variable : inclure ou non une photo dans une diapositive
        # x = model.addVars(len(photos), vtype=GRB.BINARY, name="x")

        # Exemple de fonction objectif
        # model.setObjective(gp.quicksum(x[i] for i in range(len(photos))), GRB.MAXIMIZE)

        # Résolution
        model.optimize()

        # Traitement des résultats
        if model.Status == GRB.OPTIMAL:
            print("Optimal solution found!")
            # Exemple : générer slideshow.sol
            with open(output_file, 'w') as out:
                out.write("1\n0\n")  # Exemple de contenu statique
        else:
            print("No optimal solution found.")

    except gp.GurobiError as e:
        print(f"Error code {e.errno}: {str(e)}")
    except Exception as e:
        print(f"Error: {str(e)}")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print("Usage: python slideshow.py <input_file> <output_file>")
        sys.exit(1)

    input_file = sys.argv[1]
    output_file = sys.argv[2]
    main(input_file, output_file)
